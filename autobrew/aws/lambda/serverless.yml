
service: autobrew-brews
app: autobrew
#org: your-org-name

frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.7
  lambdaHashingVersion: 20201221
  memorySize: 128

  stage: prod
  region: eu-west-1


  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamoDB:PutItem
        - dynamoDB:Scan
        - dynamoDB:GetItem
        - dynamoDB:UpdateItem
        - dynamoDB:DeleteItem
      Resource: arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/autobrew_brew

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
package:
  individually: false
  exclude:
    - test_*
    - package.json
    - package-lock.json
    - node_modules/**

plugins:
  - serverless-pseudo-parameters
  - serverless-python-requirements
functions:
  getAllBrews:
    handler: handler.get_brews
    events:
      - httpApi:
          method: get
          path: /brew
  getBrew:
    handler: handler.get_brew
    events:
      - httpApi:
          method: get
          path: /brew/{id}
  createBrew:
    handler: handler.create_brew
    events:
      - httpApi:
          method: post
          path: /brew
  updateBrew:
    handler: handler.update_brew
    events:
      - httpApi:
          method: put
          path: /brew/{id}
  deleteBrew:
    handler: handler.delete_brew
    events:
      - httpApi:
          method: delete
          path: /brew/{id}

#    Define function environment variables here
#    environment:
#      variable2: value2
#Resources:


# you can add CloudFormation resource templates here
resources:
  Resources:
    brewTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: autobrew_brew
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
